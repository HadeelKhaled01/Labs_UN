//1. دوال إنشاء المصفوفات وتعبئتها
//تنشئ مصفوفة جديدة.
$array = array(1, 2, 3);

// range() - تنشئ مصفوفة بمدى من القيم.
$numbers = range(1, 10); // [1, 2, ..., 10]

//2. دوال الوصول والتحقق
//تتحقق مما إذا كانت قيمة موجودة في المصفوفة.
$result = in_array(3, $array); // true

//  تتحقق من وجود مفتاح في المصفوفة.
$result = array_key_exists('name', ['name' => 'Ali']); // true

// isset() - تتحقق مما إذا كان المفتاح موجودًا وله قيمة.
$result = isset($array[1]); // true إذا كان مفتاح موجود وله قيمة.

//3. دوال المفاتيح والقيم
//ترجع جميع المفاتيح في المصفوفة.
$keys = array_keys(['a' => 1, 'b' => 2]); // ['a', 'b']

// ترجع جميع القيم في المصفوفة.
$values = array_values(['a' => 1, 'b' => 2]); // [1, 2]

// تقلب المفاتيح مع القيم.
$flipped = array_flip(['a' => 1, 'b' => 2]); // [1 => 'a', 2 => 'b']

// تعكس ترتيب عناصر المصفوفة.
$reversed = array_reverse([1, 2, 3]); // [3, 2, 1]

// تحذف العناصر المكررة.
$unique = array_unique([1, 2, 2, 3]); // [1, 2, 3]

//4. دوال البحث في المصفوفات
// تبحث عن قيمة وتُرجع المفتاح الخاص بها.
$key = array_search(2, [1, 2, 3]); // 1
// array_keys() + array_search() - البحث عن كل المفاتيح لقيمة معينة.
$keys = array_keys(['a' => 1, 'b' => 1], 1); // ['a', 'b']

//5. دوال إضافة العناصر أو حذفها
// تضيف عناصر جديدة إلى نهاية المصفوفة.
array_push($array, 4, 5); // [1, 2, 3, 4, 5]

// تحذف آخر عنصر من المصفوفة.
$last = array_pop($array); // 5

//  تضيف عناصر جديدة إلى بداية المصفوفة.
array_unshift($array, 0); // [0, 1, 2, 3]

// تحذف أول عنصر من المصفوفة.
$first = array_shift($array); // 0

6. دوال تقسيم ودمج المصفوفات
//  تدمج مصفوفتين أو أكثر.
$merged = array_merge([1, 2], [3, 4]); // [1, 2, 3, 4]

// تقطع جزءًا من المصفوفة.
$slice = array_slice([1, 2, 3, 4], 1, 2); // [2, 3]

// تحذف جزءًا من المصفوفة وتستبدله بعناصر جديدة.
$array = [1, 2, 3, 4];
array_splice($array, 1, 2, [9, 10]); // [1, 9, 10, 4]

// تدمج مصفوفتين، الأولى للمفاتيح والثانية للقيم.
$combined = array_combine(['a', 'b'], [1, 2]); // ['a' => 1, 'b' => 2]

//7. دوال التصفية والترتيب

//  تصفي المصفوفة باستخدام دالة شرطية.
$filtered = array_filter([1, 2, 3, 4], function($v) {
    return $v % 2 == 0;
}); // [2, 4]

//  ترتيب المصفوفة تصاعديًا (تُعدل المصفوفة الأصلية).
sort($array); 

// ترتيب المصفوفة تنازليًا.
rsort($array);

// ترتيب المصفوفة تصاعديًا مع الحفاظ على المفاتيح.
asort($array);

// ترتيب المصفوفة حسب المفاتيح تصاعديًا.
ksort($array);

//8. دوال حسابية على المصفوفات
// count() - تحسب عدد العناصر في المصفوفة.
$length = count([1, 2, 3]); // 3

// array_sum() - تجمع القيم في المصفوفة.
$sum = array_sum([1, 2, 3]); // 6

// array_product() - تحسب حاصل ضرب القيم في المصفوفة.
$product = array_product([1, 2, 3, 4]); // 24

9. دوال إعادة بناء القيم
// تطبق دالة على كل عنصر في المصفوفة.
$squared = array_map(function($n) {
    return $n * $n;
}, [1, 2, 3]); // [1, 4, 9]

// تختزل المصفوفة إلى قيمة واحدة.
$sum = array_reduce([1, 2, 3], function($carry, $item) {
    return $carry + $item;
}, 0); // 6

//10. دوال ملحقة بالمصفوفات المتعددة
// ترجع القيم المشتركة بين مصفوفتين.
$common = array_intersect([1, 2, 3], [2, 3, 4]); // [2, 3]

//ترجع القيم المختلفة بين مصفوفتين.
$diff = array_diff([1, 2, 3], [2, 3]); // [1]

// تقسيم المصفوفة إلى أجزاء.
$chunks = array_chunk([1, 2, 3, 4, 5], 2); // [[1, 2], [3, 4], [5]]

//11. دوال التكرار (Iteration)
// تعرض المفتاح والقيمة للعنصر الحالي (Deprecated بعد PHP 7.2).
$array = ['a' => 1, 'b' => 2];
while ($element = each($array)) {
    print_r($element);
}

//تطبق دالة على كل عنصر في المصفوفة.
$array = [1, 2, 3];
array_walk($array, function($value, $key) {
    echo "Key: $key, Value: $value\n";
});

//12. دوال التحليل وإعادة الهيكلة
// تضيف عناصر جديدة لتوسيع حجم المصفوفة.
$padded = array_pad([1, 2], 5, 0); // [1, 2, 0, 0, 0]

//  تستبدل القيم بمصفوفة أخرى.
$replaced = array_replace([1, 2, 3], [0 => 10, 2 => 30]); // [10, 2, 30]

// تستبدل القيم بمصفوفة أخرى بشكل متداخل.
$array1 = ['a' => ['b' => 1]];
$array2 = ['a' => ['b' => 2]];
$result = array_replace_recursive($array1, $array2); // ['a' => ['b' => 2]]

// تملأ مصفوفة بقيم ثابتة.
$filled = array_fill(0, 5, 'A'); // ['A', 'A', 'A', 'A', 'A']
13. دوال التفريغ وتحويل القيم
// تستخرج قيم عمود معين من مصفوفة متعددة الأبعاد.
$records = [
    ['id' => 1, 'name' => 'Ali'],
    ['id' => 2, 'name' => 'Ahmed'],
];
$names = array_column($records, 'name'); // ['Ali', 'Ahmed']

// تقسيم المصفوفة إلى أجزاء.
$chunks = array_chunk([1, 2, 3, 4, 5], 2); // [[1, 2], [3, 4], [5]]

//14. دوال القيم العشوائية
// تخلط عناصر المصفوفة بشكل عشوائي.
$array = [1, 2, 3, 4];
shuffle($array); // عناصر المصفوفة مرتبة بشكل عشوائي.

// ترجع مفتاحًا عشوائيًا من المصفوفة.
$randomKey = array_rand([1, 2, 3, 4]); // مفتاح عشوائي.

//15. دوال الفحص والتقسيم
// ترجع القيم المختلفة بالمفاتيح.
$result = array_diff_key(['a' => 1, 'b' => 2], ['b' => 2]); // ['a' => 1]

// ترجع القيم المشتركة بناءً على المفاتيح.
$result = array_intersect_key(['a' => 1, 'b' => 2], ['b' => 3]); // ['b' => 2]

// تقارن المفاتيح والقيم معًا.
$result = array_diff_assoc(['a' => 1, 'b' => 2], ['b' => 2]); // ['a' => 1]

//16. دوال التجميع (Aggregation)
// تجمع كل قيم المصفوفة.
$sum = array_sum([1, 2, 3]); // 6

//  تحسب حاصل ضرب جميع القيم.
$product = array_product([1, 2, 3, 4]); // 24

//17. دوال التحويل بين المصفوفات والنصوص
// تجمع قيم المصفوفة إلى نص.
$string = implode(', ', [1, 2, 3]); // "1, 2, 3"

// تقسم نصًا إلى مصفوفة.
$array = explode(', ', "1, 2, 3"); // [1, 2, 3]

//18. دوال متعلقة بالوظائف العشوائية والتحقق
// تملأ المصفوفة بمفاتيح معينة وقيمة ثابتة.
$keys = ['a', 'b', 'c'];
$filled = array_fill_keys($keys, 0); // ['a' => 0, 'b' => 0, 'c' => 0]

// تتحقق مما إذا كانت المصفوفة قائمة فهرسية (PHP 8.1+).
$isList = array_is_list([1, 2, 3]); // true

//19. دوال التقاطع والفروق المتعددة
// ترجع العناصر المشتركة مع مقارنة المفاتيح والقيم.
$result = array_intersect_assoc(['a' => 1, 'b' => 2], ['a' => 1, 'b' => 3]); // ['a' => 1]

// تُنفذ مقارنة مخصصة بين قيم المصفوفة.
$result = array_udiff([1, 2, 3], [2, 3, 4], function($a, $b) {
    return $a <=> $b;
}); // [1]

//20. دوال الدمج المخصصة
// تدمج مصفوفتين أو أكثر بشكل متداخل.
$array1 = ['a' => [1], 'b' => 2];
$array2 = ['a' => [2], 'b' => 3];
$merged = array_merge_recursive($array1, $array2); 
// ['a' => [1, 2], 'b' => [2, 3]]

// تستبدل القيم بمصفوفة أخرى.
$replaced = array_replace([1, 2, 3], [0 => 10]); // [10, 2, 3]